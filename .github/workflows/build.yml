name: WebUI Static Site Build

# You can reference this in your static site repos to build and push to `static` branch
# USAGE:
# Default: `uses: maclong9/web-ui/.github/workflows/build.yml@main`
#
# Customised:
# ``` build.yml
# jobs:
#  build:
#    uses: maclong9/web-ui/.github/workflows/build.yml@main
#    with:
#      swift-version: '5.9'
#      generate-command: 'swift run PortfolioGenerator'
#      static-branch: 'gh-pages'
#      output-directory: 'dist'
#      working-directory: 'Application'
# ```

on:
  workflow_call:
    inputs:
      swift-version:
        description: 'Swift version to use'
        required: false
        type: string
        default: '6.1'
      build-command:
        description: 'Custom build command'
        required: false
        type: string
        default: 'swift build -v'
      generate-command:
        description: 'Site generation command'
        required: false
        type: string
        default: 'swift run Application'
      output-directory:
        description: 'Output directory path'
        required: false
        type: string
        default: '.output'
      static-branch:
        description: 'Branch to push static content to'
        required: false
        type: string
        default: 'static'
      working-directory:
        description: 'Working directory for build commands'
        required: false
        type: string
        default: '.'

permissions:
  contents: write 

jobs:
  web-ui-build:
    runs-on: macos-15
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      # Check out the repository code
      - uses: actions/checkout@v4
      
      # Cache Swift toolchain
      - name: Cache Swift Toolchain
        uses: actions/cache@v4
        id: cache-swift-toolchain
        with:
          path: ~/Library/Developer/Toolchains
          key: ${{ runner.os }}-swift-toolchain-v1
          restore-keys: |
            ${{ runner.os }}-swift-toolchain-

      # Set up Swift (only if cache miss)
      - name: Setup Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ inputs.swift-version }}
        if: steps.cache-swift-toolchain.outputs.cache-hit != 'true'
      
      # Cache Swift build artifacts
      - name: Cache Swift Build
        uses: actions/cache@v4
        id: cache-swift-build
        with:
          path: ${{ inputs.working-directory }}/.build
          key: ${{ runner.os }}-swift-build-${{ hashFiles(format('{0}/Package.swift', inputs.working-directory), format('{0}/Sources/**', inputs.working-directory)) }}
          restore-keys: |
            ${{ runner.os }}-swift-build-
      
      # Build the project
      - name: Build
        run: ${{ inputs.build-command }}
        if: steps.cache-swift-build.outputs.cache-hit != 'true'
      
      # Cache generated site output
      - name: Cache Generated Site
        uses: actions/cache@v4
        id: cache-site-output
        with:
          path: ${{ inputs.working-directory }}/${{ inputs.output-directory }}
          key: ${{ runner.os }}-site-output-${{ hashFiles(format('{0}/Sources/**', inputs.working-directory)) }}
          restore-keys: |
            ${{ runner.os }}-site-output-
      
      # Run the static site generator
      - name: Generate Site
        run: ${{ inputs.generate-command }}
        if: steps.cache-site-output.outputs.cache-hit != 'true'

      # Push to static branch (only on push to main)
      - name: Push to static branch
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: .
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git checkout -B ${{ inputs.static-branch }}
          rm -rf ./*
          # Define source directory
          SOURCE="${{ inputs.working-directory }}/${{ inputs.output-directory }}"
          
          # Verify directory exists and is not empty
          if [ -d "$SOURCE" ] && [ "$(ls -A "$SOURCE")" ]; then
            cp -r "$SOURCE"/. .  # copy everything, including hidden files
          else
            echo "Error: Output directory '$SOURCE' does not exist or is empty"
            exit 1
          fi
          rm -rf ${{ inputs.working-directory }}/${{ inputs.output-directory }} .gitignore .github .build .swift-format Public
          git add .
          git commit -m "Update static site content"
          git push origin ${{ inputs.static-branch }} --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
