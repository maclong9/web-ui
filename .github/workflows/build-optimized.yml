name: WebUI Optimized Build

on:
  workflow_call:
    inputs:
      webui-cli-version:
        description: 'WebUI CLI version to use'
        required: false
        type: string
        default: 'latest'
      build-command:
        description: 'Custom build command (if not using CLI)'
        required: false
        type: string
        default: 'webui build --verbose'
      output-directory:
        description: 'Output directory path'
        required: false
        type: string
        default: '.output'
      static-branch:
        description: 'Branch to push static content to'
        required: false
        type: string
        default: 'static'
      working-directory:
        description: 'Working directory for build commands'
        required: false
        type: string
        default: '.'

permissions:
  contents: write

jobs:
  optimized-build:
    runs-on: macos-15
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest WebUI CLI version
        id: cli-version
        run: |
          if [ "${{ inputs.webui-cli-version }}" = "latest" ]; then
            VERSION=$(curl -s https://api.github.com/repos/maclong9/web-ui/releases/latest | \
              grep '"tag_name"' | \
              head -1 | \
              cut -d '"' -f 4)

            if [ -z "$VERSION" ]; then
              echo "Warning: Could not get version from API, using fallback"
              VERSION="v1.2.0"
            fi

            echo "Using latest WebUI CLI version: $VERSION"
          else
            VERSION="${{ inputs.webui-cli-version }}"
            echo "Using specified WebUI CLI version: $VERSION"
          fi

          if [ -z "$VERSION" ]; then
            echo "Error: VERSION is empty"
            exit 1
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Cache WebUI CLI Binary
        uses: actions/cache@v4
        id: cache-cli
        with:
          path: ~/webui
          key: webui-${{ steps.cli-version.outputs.version }}

      - name: Download WebUI CLI
        if: steps.cache-cli.outputs.cache-hit != 'true'
        run: |
          echo "📥 Downloading WebUI CLI ${{ steps.cli-version.outputs.version }}"

          # Adjust architecture if needed
          ARCH="arm64"
          curl -L -o webui \
            "https://github.com/maclong9/web-ui/releases/download/${{ steps.cli-version.outputs.version }}/webui"

          mv webui ~/webui
          chmod +x ~/webui

          ~/webui --version
          echo "✅ WebUI CLI downloaded and cached"

      - name: Install WebUI CLI to PATH
        run: |
          sudo cp ~/webui /usr/local/bin/webui
          webui --version
          echo "✅ WebUI CLI ready"

      - name: Cache Generated Site
        uses: actions/cache@v4
        id: cache-site-output
        with:
          path: ${{ inputs.working-directory }}/${{ inputs.output-directory }}
          key: ${{ runner.os }}-site-output-${{ hashFiles(format('{0}/Sources/**', inputs.working-directory), format('{0}/Package.swift', inputs.working-directory)) }}
          restore-keys: |
            ${{ runner.os }}-site-output-

      - name: Build Site with WebUI CLI
        run: ${{ inputs.build-command }}
        if: steps.cache-site-output.outputs.cache-hit != 'true'

      - name: Validate Build Output
        run: |
          OUTPUT_PATH="${{ inputs.working-directory }}/${{ inputs.output-directory }}"

          if [ ! -d "$OUTPUT_PATH" ]; then
            echo "❌ Output directory not found: $OUTPUT_PATH"
            exit 1
          fi

          FILE_COUNT=$(find "$OUTPUT_PATH" -type f | wc -l)
          if [ "$FILE_COUNT" -eq 0 ]; then
            echo "❌ No files generated in output directory"
            exit 1
          fi

          echo "✅ Build validation passed: $FILE_COUNT files generated"
          echo "📁 Generated files (first 10):"
          find "$OUTPUT_PATH" -type f -name "*.html" | head -10 | sed 's/^/  /'

      - name: Push to static branch
        if: github.ref == 'refs/heads/main'
        working-directory: .
        run: |
          set -euo pipefail
          echo "🔧 Configuring Git user"
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          SOURCE="${{ inputs.working-directory }}/${{ inputs.output-directory }}"
          echo "📁 Copying from output directory: $SOURCE"

          if [ ! -d "$SOURCE" ]; then
            echo "❌ ERROR: Directory '$SOURCE' does not exist"
            exit 1
          fi

          if [ -z "$(ls -A "$SOURCE")" ]; then
            echo "❌ ERROR: Directory '$SOURCE' is empty"
            exit 1
          fi

          echo "📦 Files in output directory before checkout:"
          ls -la "$SOURCE"

          echo "🧳 Moving site output to temp_output/"
          mkdir -p temp_output
          cp -r "$SOURCE"/. ~/temp_output/

          echo "🌿 Switching to static branch: ${{ inputs.static-branch }}"
          git checkout -B "${{ inputs.static-branch }}"

          echo "🧹 Cleaning current contents"
          rm -rf ./*

          echo "📥 Copying files back from temp_output/"
          cp -r ~/temp_output/* .

          echo "🧽 Cleaning up"
          rm -rf ~/temp_output "$SOURCE" .gitignore .github .build .swift-format Public Articles

          echo "📝 Git add & commit"
          git add .
          git commit -m "Update static site content - built with WebUI CLI ${{ steps.cli-version.outputs.version }}"
          git push origin "${{ inputs.static-branch }}" --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Summary
        run: |
          echo "## 🚀 WebUI Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **WebUI CLI Version:** ${{ steps.cli-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Command:** \`${{ inputs.build-command }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Output Directory:** ${{ inputs.output-directory }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Cache Hit (CLI):** ${{ steps.cache-cli.outputs.cache-hit }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Cache Hit (Site):** ${{ steps.cache-site-output.outputs.cache-hit }}" >> $GITHUB_STEP_SUMMARY

          if [ -d "${{ inputs.working-directory }}/${{ inputs.output-directory }}" ]; then
            FILE_COUNT=$(find "${{ inputs.working-directory }}/${{ inputs.output-directory }}" -type f | wc -l)
            echo "- **Generated Files:** $FILE_COUNT" >> $GITHUB_STEP_SUMMARY
          fi

