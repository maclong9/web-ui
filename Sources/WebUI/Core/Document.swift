import Foundation

/// Creates a complete HTML document by combinding the `metadata`, `theme` and document.
///
/// This is responsible for rendering the root `<html>` tag, which contains the `<head>` and `<body>` tags.
/// - The `<html>` tag is the root element of an HTML document and specifies the language of the document.
/// - The `<head>` tag, generated by `configuration.metadata.renderer()`, contains metadata about the document, such as title, description, keywords, author, and type.
/// - The `<body>` tag contains the main content of the HTML document, which is provided by the `content` property.
public struct Document {
  let configuration: Configuration
  let title: String
  let description: String
  let keywords: [String]?
  let author: String?
  let type: String?

  private let contentBuilder: () -> [any HTML]

  var content: [any HTML] {
    contentBuilder()
  }

  /// Creates a new HTML document with its details and content.
  ///
  /// This prepares everything needed to create a full webpage, including its settings, title, description, and content.
  /// - Parameters:
  ///   - configuration: The overall settings for the document, like metadata and theme, with a default if not provided.
  ///   - title: The main title of the webpage, shown in the browser tab.
  ///   - description: A short summary of the webpageâ€™s purpose or content.
  ///   - keywords: Optional words or phrases, like "blog, news", to help search engines understand the page.
  ///   - author: An optional name of the person who created the page, like "Jane Doe".
  ///   - type: An optional label, like "article" or "website", to categorize the page.
  ///   - content: A builder that provides the main HTML content, such as text or other elements, to fill the page.
  init(
    configuration: Configuration = Configuration(),
    title: String,
    description: String,
    keywords: [String]? = nil,
    author: String? = nil,
    type: String? = nil,
    @HTMLBuilder content: @escaping () -> [any HTML]
  ) {
    self.configuration = configuration
    self.title = title
    self.description = description
    self.keywords = keywords
    self.author = author
    self.type = type
    self.contentBuilder = content
  }

  /// Generates a complete HTML document as a string.
  /// This builds the full webpage, combining the `<html>` tag with language settings, the `<head>` section from metadata, and the `<body>` with content, like "<!DOCTYPE html><html lang=\"en\">...".
  func render() -> String {
    let pageTitle = "\(title) | \(configuration.metadata.site)"

    return """
      <!DOCTYPE html>
      <html lang="\(configuration.metadata.locale)">
        \(configuration.metadata.render(
          pageTitle: pageTitle,
          description: description,
          twitter: configuration.metadata.twitter,
          author: author,
          keywords: keywords,
          type: type
        ))
        <body>
          \(content.map { $0.render() }.joined())
        </body>
      </html>
      """
  }
}
